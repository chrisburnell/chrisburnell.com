---
title: Stats
description: Numbers, cause why not?
excludeFromSearch: true
---
{%- set all_posts = collections.posts | noRSSOnlyFilter -%}
{%- set blog_posts = collections.blogPosts | noRSSOnlyFilter -%}

{%- set count = all_posts.length -%}
{%- set first_year = 2013 -%}
{%- set latest_year = all_posts[0].data.year | default(all_posts[0].year) -%}

{%- set latest_post = blog_posts | first -%}
{%- set first_post = blog_posts | last -%}

{%- set wordiest_post_index = 0 -%}
{%- set wordiest_blog_post = 0 -%}
{%- set blog_wordcount = 0 -%}
{%- for item in blog_posts -%}
	{%- set wordCount = item.content | removeTagsForWordcount | striptags | safe | wordcount -%}
	{%- set blog_wordcount = blog_wordcount + wordCount -%}
	{%- if wordCount > wordiest_blog_post -%}
		{%- set wordiest_blog_post = wordCount -%}
		{%- set wordiest_post_index = loop.index0 -%}
	{%- endif -%}
{%- endfor -%}

{%- set blog_count = 0 -%}
{%- set blog_count_highest_per_year = 0 -%}
{%- for i in range(first_year, latest_year + 1) -%}
	{%- set count = blog_posts | getCollectionCountByYear(i) -%}
	{%- set blog_count = blog_count + count -%}
	{%- if count > blog_count_highest_per_year -%}
		{%- set blog_count_highest_per_year = count -%}
	{%- endif -%}
{%- endfor -%}

{%- set blog_count_highest_per_weekday = 0 -%}
{%- for weekday in ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] -%}
	{%- set count = blog_posts | getCollectionCountByWeekday(weekday) -%}
	{%- if count > blog_count_highest_per_weekday -%}
		{%- set blog_count_highest_per_weekday = count -%}
	{%- endif -%}
{%- endfor -%}

{%- set blog_count_highest_per_category = 0 -%}
{%- for item in collections.categories -%}
	{%- set count = collections[item.title] | arePublished | noRSSOnlyFilter | getCollectionCount -%}
	{%- if count > blog_count_highest_per_category -%}
		{%- set blog_count_highest_per_category = count -%}
	{%- endif -%}
{%- endfor -%}

{%- set blog_count_highest_per_tag = 0 -%}
{%- for item in collections.tags -%}
	{%- set count = collections[item] | arePublished | noRSSOnlyFilter | getCollectionCount -%}
	{%- if count > blog_count_highest_per_tag -%}
		{%- set blog_count_highest_per_tag = count -%}
	{%- endif -%}
{%- endfor -%}

{%- set most_popular_page = collections.popular | first -%}
{%- set most_hot_page = collections.hot | first -%}

{% set package_downloads = 0 -%}
{% for project in collections.projects -%}
	{% set package_downloads = package_downloads + (project.data.downloads | default(0)) -%}
{%- endfor -%}

{%- set first_commit = repository.information.created_at | epoch -%}
{%- set days_since_first_commit = (global.nowEpoch - first_commit) | msToDays -%}
{%- set commits_per_day = repository.contributors[0].contributions / days_since_first_commit -%}

<dl>
	<dt>№ Posts</dt>
	<dd>{{ all_posts.length | numberStringFormat }}</dd>
	<dt>№ Blog Posts<a href="#fn1" id="fnref1"><sup class="footnote-ref">[1]</sup></a></dt>
	<dd>{{ blog_count | numberStringFormat }}</dd>
	<dt>First Blog Post</dt>
	<dd><a href="{{ first_post | keyValue('url') }}">{{ first_post | keyValue('data.title') | safe }}</a><br><time datetime="{{ first_post | keyValue('data.date') | rfc3339Date | safe }}">{{ first_post | keyValue('data.date') | friendlyDateLong | safe }}</time></dd>
	<dt>Latest Blog Post</dt>
	<dd><a href="{{ latest_post | keyValue('url') }}">{{ latest_post | keyValue('data.meta_title') | safe }}</a><br><time datetime="{{ latest_post | keyValue('data.date') | rfc3339Date | safe }}">{{ latest_post | keyValue('data.date') | friendlyDateLong | safe }}</time></dd>
	<dt>Blog Word Count</dt>
	<dd>{{ blog_wordcount | numberStringFormat }}</dd>
	<dt>Most Verbose Post</dt>
	<dd><a href="{{ blog_posts[wordiest_post_index].url }}">{{ blog_posts[wordiest_post_index].data.title }}</a> <small>with</small> {{ wordiest_blog_post | numberStringFormat }} words</dd>
	<dt>Most Popular Page<a href="#fn2" id="fnref2"><sup class="footnote-ref">[2]</sup></a></dt>
	<dd><a href="{{ most_popular_page | keyValue('url') }}">{{ most_popular_page | keyValue('data.meta_title') | safe }}</a><br><time datetime="{{ most_popular_page | keyValue('data.date') | rfc3339Date | safe }}">{{ most_popular_page | keyValue('data.date') | friendlyDateLong | safe }}</time></dd>
	<dt>Hottest Page<a href="#fn3" id="fnref3"><sup class="footnote-ref">[3]</sup></a></dt>
	<dd><a href="{{ most_hot_page | keyValue('url') }}">{{ most_hot_page | keyValue('data.meta_title') | safe }}</a><br><time datetime="{{ most_hot_page | keyValue('data.date') | rfc3339Date | safe }}">{{ most_hot_page | keyValue('data.date') | friendlyDateLong | safe }}</time></dd>
	<dt>№ Projects</dt>
	<dd><a href="/projects/">{{ (projects.web.length + projects.personal.length + collections.projects.length) | numberStringFormat }}</a></dd>
	<dt>Total Project Downloads</dt>
	<dd>{{ package_downloads | numberStringFormat }}</dd>
	<dt>№ Blogs in my Blogroll</dt>
	<dd><a href="/blogroll/">{{ blogroll | length | numberStringFormat }}</a></dd>
	<dt>№ Webmentions Received</dt>
	<dd>{{ webmentionsAll | length | numberStringFormat }}</dd>
	<dt>Commits <small>per</small> Day</dt>
	<dd><a href="https://github.com/{{ author.github }}/{{ site.repository }}/commits/{{ site.branch }}">{{ commits_per_day | maxDecimals(2) }}</a> <small>({{ repository.contributors[0].contributions | numberStringFormat }} commits over <span title="since {{ repository.information.created_at | friendlyDate }}">{{ (days_since_first_commit / 365.2422) | maxDecimals(2) }} years</span>)</small></dd>
</dl>

<hr>

<h2>Blog Posts</h2>

<div class=" [ grid  center ] " style="--grid-min-inline-size: 100%;">{% sparkline blog_posts, first_year, false %}</div>

<c-details open="true" force-close="(max-width: 850px)" force-restore>
	<summary>Blog Posts by year</summary>
	<table style="border-block-start: 0; font-size: var(--font-size-small);">
		<tbody>
			{% for i in range(first_year, global.currentYear + 1) -%}
				{% set count = blog_posts | getCollectionCountByYear(i) -%}
				<tr>
					<th style="white-space: nowrap;">{{ i }}</th>
					<td class=" [ numeral  strong ] " style="padding-inline-start: 1lh; padding-inline-end: var(--size-medium);">{{ count }}</td>
					<td style="inline-size: 100%; padding-inline: 0;">
						<div class=" [ background--raven ] " style="background-image: linear-gradient(to bottom, transparent, oklch(from var(--color-mineshaft) l c h / var(--opacity-beta))); inline-size: {{ (count / blog_count_highest_per_year * 100) | maxDecimals }}%; block-size: 1lh; border-radius: var(--size-border-default);"></div>
					</td>
				</tr>
			{%- endfor %}
		</tbody>
	</table>
</c-details>

{#
<c-details open="true" force-close="(max-width: 850px)" force-restore>
	<summary>Blog Posts by weekday</summary>
	{% set blog_posts_by_weekday = [{ label: 'Monday', count: (blog_posts | getCollectionCountByWeekday('Monday')) }, { label: 'Tuesday', count: (blog_posts | getCollectionCountByWeekday('Tuesday')) }, { label: 'Wednesday', count: (blog_posts | getCollectionCountByWeekday('Wednesday')) }, { label: 'Thursday', count: (blog_posts | getCollectionCountByWeekday('Thursday')) }, { label: 'Friday', count: (blog_posts | getCollectionCountByWeekday('Friday')) }, { label: 'Saturday', count: (blog_posts | getCollectionCountByWeekday('Saturday')) }, { label: 'Sunday', count: (blog_posts | getCollectionCountByWeekday('Sunday')) }] -%}
	<c-stats-table items="{{ blog_posts_by_weekday | dump }}" style="border-block-start: 0;"></c-stats-table>
</c-details>
#}

<c-details open="true" force-close="(max-width: 850px)" force-restore>
	<summary>Blog Posts by weekday</summary>
	<table style="border-block-start: 0; font-size: var(--font-size-small);">
		<tbody>
			{% for weekday in ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] -%}
				{% set count = blog_posts | getCollectionCountByWeekday(weekday) -%}
				<tr>
					<th style="white-space: nowrap;">{{ weekday }}</th>
					<td class=" [ numeral  strong ] " style="padding-inline-start: 1lh; padding-inline-end: var(--size-medium);">{{ count }}</td>
					<td style="inline-size: 100%; padding-inline: 0;">
						<div class=" [ background--raven ] " style="background-image: linear-gradient(to bottom, transparent, oklch(from var(--color-mineshaft) l c h / var(--opacity-beta))); inline-size: {{ (count / blog_count_highest_per_weekday * 100) | maxDecimals }}%; block-size: 1lh; border-radius: var(--size-border-default);"></div>
					</td>
				</tr>
			{%- endfor %}
		</tbody>
	</table>
</c-details>

<c-details open="true" force-close="(max-width: 850px)" force-restore>
	<summary>Blog Posts by category</summary>
	<table style="border-block-start: 0; font-size: var(--font-size-small);">
		<tbody>
			{% for item in collections.categories -%}
				{%- set count = collections[item.title] | arePublished | noRSSOnlyFilter | getCollectionCount -%}
				<tr>
					<th style="white-space: nowrap;">{{ item.properPlural | supertitle }}</th>
					<td class=" [ numeral  strong ] " style="padding-inline-start: 1lh; padding-inline-end: var(--size-medium);">{{ count }}</td>
					<td style="inline-size: 100%; padding-inline: 0;">
						<div class=" [ background--raven ] " style="background-image: linear-gradient(to bottom, transparent, oklch(from var(--color-mineshaft) l c h / var(--opacity-beta))); inline-size: {{ (count / blog_count_highest_per_category * 100) | maxDecimals }}%; block-size: 1lh; border-radius: var(--size-border-default);"></div>
					</td>
				</tr>
			{%- endfor %}
		</tbody>
	</table>
</c-details>

<c-details open="true" force-close="(max-width: 850px)" force-restore>
	<summary>Blog Posts by tag</summary>
	<table style="border-block-start: 0; font-size: var(--font-size-small);">
		<tbody>
			{% for item in collections.tags | sort -%}
				{%- set count = collections[item] | arePublished | noRSSOnlyFilter | getCollectionCount -%}
				<tr>
					<th style="white-space: nowrap;">{{ item }}</th>
					<td class=" [ numeral  strong ] " style="padding-inline-start: 1lh; padding-inline-end: var(--size-medium);">{{ count }}</td>
					<td style="inline-size: 100%; padding-inline: 0;">
						<div class=" [ background--raven ] " style="background-image: linear-gradient(to bottom, transparent, oklch(from var(--color-mineshaft) l c h / var(--opacity-beta))); inline-size: {{ (count / blog_count_highest_per_tag * 100) | maxDecimals }}%; block-size: 1lh; border-radius: var(--size-border-default);"></div>
					</td>
				</tr>
			{%- endfor %}
		</tbody>
	</table>
</c-details>

<hr style="--rule-space: var(--size-medium);">

<nav aria-label="Footnotes">
	<ol>
		<li id="fn1" class=" [ flow ] ">
			<p>What’s the difference between a <q>post</q> and <q>blog post</q>?
			<br>
			Well, there are a number of <a href="/posts/#categories">post categories</a> (e.g. <a href="/music/">music reviews</a>) that aren’t very <q>bloggy</q> per se, so I make the distinction that <strong>blog posts</strong> specifically have a decent heft of written content to them. <a href="#fnref1">↩︎</a></p>
		</li>
		<li id="fn2" class=" [ flow ] ">
			<p>Popularity?
			<br>
			<q>Popularity</q> is calculated by weighting a page’s pageviews against its responses (incoming Webmentions) (<span class=" [ ordinal ] "><code>α</code> = {{ site.weights.pageviewsCoefficient }}</span>). Pages’ scores are compared and sorted to determine a popularity ranking, and the top 10 are shown on <a href="/popular/">Popular Pages</a>. <a href="#fnref2">↩︎</a></p>
		</li>
		<li id="fn3" class=" [ flow ] ">
			<p>Hotness?
			<br>
			<q>Hotness</q> is calculated by weighting the <a href="https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average" rel="external noopener">exponential moving average</a> (<span class=" [ ordinal ] "><code>β</code> = 0.2</span>) of a page’s pageviews over time against the <abbr title="exponential moving average">EMA</abbr> (<span class=" [ ordinal ] "><code>γ</code> = {{ site.weights.responsesCoefficient }}</span>) of its responses (incoming Webmentions) over time (<span class=" [ ordinal ] "><code>α</code> = {{ site.weights.hotnessCoefficient }}</span>). Pages’ scores are compared and sorted to determine a hotness ranking, and the top 10 are shown on <a href="/hot/">Hot Pages</a>. <a href="#fnref3">↩︎</a></p>
		</li>
	</ol>
</nav>
