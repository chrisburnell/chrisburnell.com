---
date: 2022-11-11T21:38:00+0000
title: "clamp() Calculator"
description: "Handy little tool for calculating viewport-based clamped values."
emoji: ðŸ—œ
js_module: clamp-calculator.js
---

<noscript><p>Unfortunately, this page requires JavaScript for the calculator to function.</p></noscript>

<form id="clamp-calculator" class=" [ grid ] " data-layout="50-50" style="--min-inline-size: calc(50% - 1em)">
	<fieldset style="display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between;">
		<label for="font-size-min" class=" [ center  delta ] ">Minimum Font Size <small>(px)</small></label>
		<input id="font-size-min" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="text" inputmode="numeric" pattern="[0-9]{1,4}" value="16" data-default="16"></input>
	</fieldset>
	<fieldset style="display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between;">
		<label for="font-size-max" class=" [ center  delta ] ">Maximum Font Size <small>(px)</small></label>
		<input id="font-size-max" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="text" inputmode="numeric" pattern="[0-9]{1,4}" value="18" data-default="18"></input>
	</fieldset>
	<fieldset style="display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between;">
		<label for="viewport-width-min" class=" [ center  delta ] ">Minimum Viewport Width <small>(px)</small></label>
		<input id="viewport-width-min" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="text" inputmode="numeric" pattern="[0-9]{1,5}" value="500" data-default="500"></input>
	</fieldset>
	<fieldset style="display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between;">
		<label for="viewport-width-max" class=" [ center  delta ] ">Maximum Viewport Width <small>(px)</small></label>
		<input id="viewport-width-max" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="text" inputmode="numeric" pattern="[0-9]{1,5}" value="1000" data-default="1000"></input>
	</fieldset>
	<details style="grid-column: span 2;">
		<summary>Optional</summary>
		<fieldset style="border: 0; padding: 0; display: flex; flex-direction: column; align-items: flex-start; justify-content: space-between;">
			<label for="root-font-size" class=" [ center  delta ] ">Root Font Size <small>(px)</small></label>
			<input id="root-font-size" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="text" inputmode="numeric" pattern="[0-9]{1,4}" value="16" data-default="16"></input>
		</fieldset>
	</details>
	<fieldset class=" [ center ] " style="grid-column: span 2; margin-block-start: 1em;">
		<button style="--min-inline-size: 10em; margin-inline: auto;" type="submit">Calculate</button>
		<button class="code-red" style="--min-inline-size: 10em; margin-inline: auto;" type="reset">Reset</button>
	</fieldset>
	<fieldset style="grid-column: span 2; margin-block-start: 1em;">
		<label for="output" class=" [ center  gamma ] ">The Result</label>
		<input id="output" class=" [ center  monospace ] " style="inline-size: 100%; margin-inline: auto; line-height: 3;" type="text" readonly></input>
	</fieldset>
</form>

<h2 id="how">How does this work?</h2>

<p>This calculator uses <code>rem</code> units which require knowing the font size at the documentâ€™s root. In most cases, that refers to the <code>html</code> element and this calculator currently operates with a root font size of <code id="how-base">16px</code>.</p>

<p><strong aria-hidden="true">1.</strong> We need to figure out the rate of change: how much the font size needs to change across a distance of viewport width. In other words, for every pixel of change in viewport width, how many pixels of change should there be in font size? We can calculate this by dividing the difference in font size by the difference in viewport width.</p>

<pre class="language-none"><code id="how-x">Change = (fontSizeMax - fontSizeMin) / (viewportWidthMax - viewportWidthMin)
Change = (18px - 16px) / (1000px - 500px)
Change = 0.004</code></pre>

<p><strong aria-hidden="true">2.</strong> Next, letâ€™s figure out what our <em>starting</em> font size should be (this is different from our <em>minimum</em> font size). We do this by asking how much change is applied to the font size when the viewport is at its maximum width, and subtracting that from our desired font size at the maximum viewport width.</p>

<pre class="language-none"><code id="how-a">A = fontSizeMax - viewportWidthMax * Change
A = 18px - 1000px * 0.004
A = 14px = 0.875rem</code></pre>

<p><strong aria-hidden="true">3.</strong> The last piece of the puzzle is the most straightforward: we need to represent the rate of change as a value relative to the viewport, and we do so by multiplying the rate of change with <code>100vw</code>.</p>

<pre class="language-none"><code id="how-b">B = Change * 100vw
B = 0.004 * 100vw
B = 0.4vw</code></pre>

<p><strong aria-hidden="true">4.</strong> Letâ€™s put everything together with the <code>clamp()</code> function, otherwise our calculated value will be incorrect above and below our designated viewport bounds.</p>

<pre class="language-none"><code id="how-result">Result = clamp(fontSizeMin, A + B, fontSizeMax)
Result = clamp(1rem, 0.875rem + 0.4vw, 1.125rem)</code></pre>

<h2 id="more">Learn more</h2>

<p>Wondering why we donâ€™t need <code>calc()</code> around the middle value of the <code>clamp()</code> function? <a href="https://css-irl.info">Michelle Barkerâ€™s</a> got you covered with <a href="https://css-irl.info/quick-tip-you-might-not-need-calc/">this quick tip</a>, and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/clamp">check out <code>clamp()</code> on MDN</a> to learn more.</p>

<p>Shoutout to <a href="https://www.hustlersquad.net/">James Gilyead</a> and <a href="https://www.trysmudford.com/">Trys Mudford</a> for building <a href="https://utopia.fyi/">Utopia</a>â€”a fully-fledged tool for calculating fluid type, space, and grids for your design systemsâ€”and first introducing me to this amazing technique!</p>
