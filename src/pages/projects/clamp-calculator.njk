---
date: 2022-11-11T21:38:00+0000
title: "clamp() Calculator"
description: "Handy little tool for calculating viewport-based clamped values."
tags:
  - css
  - design-systems
emoji: ðŸ—œ
css: clamp-calculator.css
js_module: clamp-calculator.js
---

<noscript><p class=" [ box  box--error ] ">Unfortunately, this calculator requires JavaScript to function correctly!</p></noscript>

<!-- </textarea> -->
<!-- '"Â´ -->
<form id="clamp-calculator" class=" [ grid ] [ clamp-calculator ] " data-layout="50-50">
	<fieldset class=" [ clamp-calculator__fieldset ] ">
		<label for="size-min" class=" [ delta ] ">Minimum Size <small>(px)</small></label>
		<input id="size-min" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="number" step="0.001" min="0" inputmode="numeric" pattern="[1-9]\d*(\.\d+)?" lang="en" value="16" data-default="16"></input>
	</fieldset>
	<fieldset class=" [ clamp-calculator__fieldset ] ">
		<label for="size-max" class=" [ delta ] ">Maximum Size <small>(px)</small></label>
		<input id="size-max" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="number" step="0.001" min="0" inputmode="numeric" pattern="[1-9]\d*(\.\d+)?" lang="en" value="18" data-default="18"></input>
	</fieldset>
	<fieldset class=" [ clamp-calculator__fieldset ] ">
		<label for="viewport-min" class=" [ delta ] ">Minimum Viewport <small>(px)</small></label>
		<input id="viewport-min" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="number" step="0.001" min="0" inputmode="numeric" pattern="[1-9]\d*(\.\d+)?" lang="en" value="500" data-default="500"></input>
	</fieldset>
	<fieldset class=" [ clamp-calculator__fieldset ] ">
		<label for="viewport-max" class=" [ delta ] ">Maximum Viewport <small>(px)</small></label>
		<input id="viewport-max" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="number" step="0.001" min="0" inputmode="numeric" pattern="[1-9]\d*(\.\d+)?" lang="en" value="1000" data-default="1000"></input>
	</fieldset>
	<details style="grid-column: span 2;">
		<summary>Optional Stuff</summary>
		<div class=" [ grid ] " data-layout="50-50" style="padding-inline: 0">
			<fieldset class=" [ clamp-calculator__fieldset ] ">
				<label for="font-size-root" class=" [ center  delta ] ">Root Font Size <small>(px)</small></label>
				<input id="font-size-root" class=" [ center  monospace ] " style="inline-size: 100%; line-height: 3;" type="number" step="0.001" min="0" inputmode="numeric" pattern="[1-9]\d*(\.\d+)?" lang="en" value="16" data-default="16"></input>
			</fieldset>
			<fieldset class=" [ clamp-calculator__fieldset ] ">
				<label for="viewport-units" class=" [ center  delta ] ">Viewport Units</label>
				<select id="viewport-units" class=" [ center  monospace ] " style="inline-size: 100%; padding-block: 0.86rem;" lang="en">
					<option value="vw" selected data-default="true">Width</opton>
					<option value="vh">Height</opton>
					<option value="vi">Inline</opton>
					<option value="vb">Block</opton>
					<option value="vmin">Minimum</opton>
					<option value="vmax">Maximum</opton>
					<option value="svw">Small Width</opton>
					<option value="svh">Small Height</opton>
					<option value="svi">Small Inline</opton>
					<option value="svb">Small Block</opton>
					<option value="svmin">Small Minimum</opton>
					<option value="svmax">Small Maximum</opton>
					<option value="lvw">Large Width</opton>
					<option value="lvh">Large Height</opton>
					<option value="lvi">Large Inline</opton>
					<option value="lvb">Large Block</opton>
					<option value="lvmin">Large Minimum</opton>
					<option value="lvmax">Large Maximum</opton>
					<option value="dvw">Dynamic Width</opton>
					<option value="dvh">Dynamic Height</opton>
					<option value="dvi">Dynamic Inline</opton>
					<option value="dvb">Dynamic Block</opton>
					<option value="dvmin">Dynamic Minimum</opton>
					<option value="dvmax">Dynamic Maximum</opton>
				</select>
			</fieldset>
		</div>
	</details>
	<fieldset class=" [ grid  navigator ] " style="grid-column: span 2;">
		<button style="--min-inline-size: 10em;" type="submit">Calculate</button>
		<button class="code-red" style="--min-inline-size: 10em;" type="reset">Reset</button>
	</fieldset>
	<fieldset style="grid-column: span 2; margin-block-start: 1em;">
		<label for="output" class=" [ center  gamma ] ">The Result</label>
		<input id="output" class=" [ clamp-calculator__result ] [ center  monospace ] " style="inline-size: 100%; margin-inline: auto; line-height: 3;" type="text" value="clamp(1rem, 0.875rem + 0.4vw, 1.125rem)" readonly></input>
	</fieldset>
</form>

<div id="examples" class="gamma">Visual Example</div>

<div class=" [ box ] [ flow ] ">
	<ul id="visual" class=" [ clamp-calculator__fieldset ] [ flow ] " style="--flow-space: 1.5rem; font-size: 16px; line-height: var(--line-height-small);">
		<li id="visual-root">
			<span>Root Size: 16px</span>
			<div class="size-example" style="margin-block-start: 0.5rem; inline-size: 1em; block-size: 1em;"></div>
		</li>
		<li id="visual-output" style="font-size: clamp(1em, 0.875em + 0.4vw, 1.125em)">
			<span>Clamped Size: 16â€“18px</span>
			<div class="size-example" style="margin-block-start: 0.5rem; inline-size: 1em; block-size: 1em;"></div>
		</li>
		<li id="visual-calculated">
			<span>Current Size: 16px<span>
		</li>
		<li id="visual-viewport" class="requires-js">
			<span>Viewport Size: 9001px</span>
		</li>
	</ul>
</div>

<h2 id="how">How does this work?</h2>

<p>This calculator uses <code>rem</code> units which require knowing the font size at the documentâ€™s root. In most cases, that refers to the <code>html</code> element and this calculator is currently operating with a root font size of <code id="how-root">16px</code>.</p>

<p><strong aria-hidden="true">1.</strong> We need to figure out the rate of change: how much the size needs to change across a distance across the viewport. In other words, for every pixel of change across the viewport, how many pixels of change should there be in size? We can calculate this by dividing the difference in size by the difference in viewport.</p>

<pre class="language-none"><code id="how-x">Change = (sizeMax - sizeMin) / (viewportMax - viewportMin)
Change = (18px - 16px) / (1000px - 500px)
Change = 0.004</code></pre>

<p><strong aria-hidden="true">2.</strong> Next, letâ€™s figure out what our <em>preferred</em> size should be (this is different from our <em>minimum</em> font size). We do this by asking how much change is applied to the size when the viewport is at its maximum size, and subtracting that from our desired size at the maximum viewport size.</p>

<pre class="language-none"><code id="how-a">A = sizeMax - viewportMax * Change
A = 18px - 1000px * 0.004
A = 14px = 0.875rem</code></pre>

<p><strong aria-hidden="true">3.</strong> The last piece of the puzzle is the most straightforward: we need to represent the rate of change as a value relative to the viewport, and we do so by multiplying the rate of change with <code>100vw</code>.</p>

<pre class="language-none"><code id="how-b">B = 100vw * Change
B = 100vw * 0.004
B = 0.4vw</code></pre>

<p><strong aria-hidden="true">4.</strong> Letâ€™s put everything together with the <code>clamp()</code> function, otherwise our calculated value will be incorrect above and below our designated viewport bounds.</p>

<pre class="language-none"><code id="how-result">Result = clamp(sizeMin, A + B, sizeMax)
Result = clamp(1rem, 0.875rem + 0.4vw, 1.125rem)</code></pre>

<p><strong aria-hidden="true">Optional.</strong> We can perform a simple check that our calculations are correct by plugging in our minimum and maximum viewport values and seeing if they result in our desired minimum and maximum sizes.</p>
<p>Letâ€™s not forget that viewport-based units (<code>vw</code>, <code>vh</code>, etc.) are kind of like a percentage, which we can factor into our calculations by dividing <code>B</code> by 100 when figuring out the true pixel-value result.</p>
<p><em>Note: Because of rounding, there may be some loss of accuracy around the 3<sup>rd</sup> decimal place in these calculations, but the browser will interpret them well.</em></p>

<pre class="language-none"><code id="how-check">A + B = 0.875rem + 0.4vw
A + B = 14px + 0.4vw

Minimum Size â‰ˆ 14px + (0.004 * 500px)
Minimum Size â‰ˆ 14px + 2px
Minimum Size â‰ˆ 16px

Maximum Size â‰ˆ 14px + (0.004 * 1000px)
Maximum Size â‰ˆ 14px + 4px
Maximum Size â‰ˆ 18px</code></pre>

<h2 id="more">Learn more</h2>

<p>Wondering why we donâ€™t need <code>calc()</code> around the middle value of the <code>clamp()</code> function? <a href="https://css-irl.info">Michelle Barkerâ€™s</a> got you covered with <a href="https://css-irl.info/quick-tip-you-might-not-need-calc/">this quick tip</a>, and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/clamp">check out <code>clamp()</code> on MDN</a> to learn more.</p>

<p>Shoutout to <a href="https://www.hustlersquad.net/">James Gilyead</a> and <a href="https://www.trysmudford.com/">Trys Mudford</a> for building <a href="https://utopia.fyi/">Utopia</a>â€”a fully-fledged tool for calculating fluid type, space, and grids for your design systemsâ€”and first introducing me to this amazing technique!</p>
