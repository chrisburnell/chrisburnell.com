////
/// Helpers
/// @group utilities
////

@use "../abstracts/collections";
@use "../generated/tokens";

// Full Bleed
.full-bleed {
	inline-size: 100vi;
	margin-inline-start: 50%;
	transform: translateX(-50%);
}

// Limit inline-size to line-length
.line-length {
	max-inline-size: var(--max-inline-size, var(--size-line-length)) !important;
}

// Make anything top sticky
.sticky {
	position: sticky;
	inset-block-start: var(--size-header, 0px);
	z-index: var(--z-index-default);
}

// <abbr class="acronym" title="National Aeronautics and Space Administration">Nasa</abbr>
// This allows screen readers to read aloud acronyms as they would be spoken, as
// opposed to an initialism, for which each letter is spoken individually,
// (e.g. HTML, CSS).
.acronym,
.uppercase {
	text-transform: uppercase;
}

// Break text on any character
.break-anywhere {
	word-wrap: anywhere;
}

// Prevent text wrapping
.no-wrap {
	white-space: nowrap;
}

// Hyphenate any looooooooooooooooooooo-
// oooooong text
.hyphen,
.hyphenate {
	@apply --hyphenate;
}

// Make things non-selectable
.non-selectable {
	@apply --non-selectable;
}

// Make things non-interactive
.non-interactive {
	@apply --non-interactive;
}

// Turn off motion (for reduced-motion-like cases)
.non-motion {
	animation-play-state: paused !important;
	transition: none !important;
	scroll-behavior: auto !important;
}

// Hide things which require motion when prefers-reduced-motion is on
.requires-motion {
	@media (prefers-reduced-motion: reduce) {
		display: none;
	}
}

// Hide things when prefers-reduced-motion is off
.requires-static {
	@media (prefers-reduced-motion: no-preference) {
		display: none;
	}
}

.sans {
	font-family: var(--font-family-sans);
}

.serif {
	font-family: var(--font-family-serif);
}

.monospace {
	font-family: var(--font-family-monospace);
}

// Make text serifed and italicised
.fancy {
	font-family: var(--font-family-serif);
	@apply --italic;
}

// For salty/silly remarks
.salty,
.silly {
	font-family: var(--font-family-silly) !important;
}

.center {
	text-align: center;
	align-items: center;
	justify-content: center;

	// just to be sure, and to override
	& > * {
		align-self: center;
		justify-self: center;
	}
}

.inline-center {
	margin-inline: auto;
}

.sideways {
	writing-mode: vertical-lr;
}

.overflow {
	overflow: visible !important;
}

// Shadows
.shadow,
.shadow--medium {
	box-shadow: var(--box-shadow, var(--box-shadow-medium));
}
.shadow--low {
	--box-shadow: var(--box-shadow-low);
}
.shadow--high {
	--box-shadow: var(--box-shadow-high);
}

// Rotates brightness 180 degrees
.dark-invert-colors {
	filter: invert(1) hue-rotate(180deg);
}

// Emoji
.emoji {
	font-family: var(--font-family-sans);
	font-style: normal;
	font-variation-settings: normal;
	font-variant-emoji: emoji;
	vertical-align: middle;
	margin-block-start: calc(1ex - 1cap);
	text-shadow: none;

	#{collections.$anchor}:not(.icon-anchor) > &:first-child,
	#{collections.$button}:not(.icon-anchor) > &:first-child {
		display: inline-block;
		padding-inline-end: 0.625ch;
	}

	svg {
		vertical-align: middle;
		margin-block-start: calc(1ex - 1cap);

		&:not([width], [height]) {
			max-inline-size: 1em;
			max-block-size: 1em;
		}
	}
}

// Sorting labels
[data-sort][aria-sort="ascending"]::after {
	content: "​ ↑ ​";
}
[data-sort][aria-sort="descending"]::after {
	content: "​ ↓ ​";
}

// Limit lines
.line-clamp {
	display: -webkit-box;
	-webkit-line-clamp: var(--line-clamp);
	-webkit-box-orient: vertical;
	overflow: hidden;
}

// Animation for transitioning from user-select:all; to user-select:text;
:is(pre[class*="language-"] code[tabindex="0"], pre:not(:has(code)), .clamp-calculator__result) {
	user-select: all;

	&:focus {
		animation: selectall var(--transition-duration-short) step-end forwards;
	}
}
@keyframes selectall {
	to {
		user-select: text;
	}
}

// Dangerous! Be careful how you use this!
.contents-only {
	display: contents;
}

// Speedlify
.speedlify-anchor {
	display: inline-block;
	margin-block-start: var(--size-small);
	text-decoration: none;
}

// Disable things which require JS when JS is not available
.no-js .requires-js {
	display: none !important;
}

// Turn things off for the feed page
.feed .no-feed {
	display: none !important;
}

// Remove things from the print layout
.no-print {
	@media print {
		display: none !important;
	}
}

// Set an appropriately-accessible text colour for each colour in the palette
.background--aspen,
.background--bear,
.background--coyote,
.background--highland,
.background--raven,
.background--snowy,
.background--yeti {
	color: var(--color-thunder);
}
.background--bowhead,
.background--conifer,
.background--nickel,
.background--kaiser,
.background--maple,
.background--mineshaft,
.background--lynx,
.background--thunder,
.background--wolf {
	color: var(--color-snowy);
}
@each $name, $color in tokens.$colors {
	.background--#{$name} {
		background-color: var(--color-#{$name});

		@supports (color: color-contrast(#5f8aa6 vs white, black)) {
			color: color-contrast(#{$color} vs var(--contrast-list) to var(--contrast-ratio));
		}
	}
}

.size-example {
	background-color: var(--color-raven);
	display: block;
	box-shadow: inset 0 0 0 var(--size-border-thin) currentColor;
}
@each $name, $_ in tokens.$sizes {
	.size-example--#{$name} {
		inline-size: var(--size-#{$name});
		block-size: var(--size-#{$name});
	}
}

// Scroll & Shadows

.scroll-inline {
	overflow-x: auto !important;
}
.scroll-inline-shadow {
	animation: --animation(inline-shadow-inside);
	animation-timeline: scroll(self inline);
	scroll-timeline-name: --scrollInline;
	scroll-timeline-axis: inline;
}
.scroll-block {
	max-block-size: calc(100vb - (var(--size-header, 0px) * 2));
	max-block-size: calc(100dvb - (var(--size-header, 0px) * 2));
	overflow-y: auto !important;
}
.scroll-block-shadow {
	animation: --animation(block-shadow-inside);
	animation-timeline: scroll(self block);
	scroll-timeline-name: --scrollBlock;
	scroll-timeline-axis: block;
}

@keyframes block-shadow-inside {
	from {
		box-shadow: inset 0 -2em 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
	to {
		box-shadow: inset 0 2em 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
}
@keyframes inline-shadow-inside {
	from {
		box-shadow: inset -2em 0 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
	to {
		box-shadow: inset 2em 0 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
}
@keyframes block-shadow-outside {
	from {
		box-shadow: none;
	}
	to {
		box-shadow: 0 2em 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
}
@keyframes inline-shadow-outside {
	from {
		box-shadow: none;
	}
	to {
		box-shadow: 2em 0 2em -2em oklch(from var(--color-shadow) l c h / 40%);
	}
}

// Scroll Snapping
html:has(.full-space) {
	@media (prefers-reduced-motion: no-preference) and (width > 700px) {
		scroll-snap-type: y mandatory;
	}
}
.full-space {
	min-block-size: 100dvh;
	display: grid;
	place-content: center;
	padding: var(--size-large-gigantic);

	@media (prefers-reduced-motion: no-preference) and (width > 700px) {
		scroll-snap-align: start;
	}
}
