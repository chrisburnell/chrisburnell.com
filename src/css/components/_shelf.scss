////
/// Shelf
/// @group components
/// Extends %grid
////

@use "../abstracts/collections";

.shelf {
	--row-gap: var(--size-gap);
	--grid-min-inline-size: 10em;

	margin-block-start: var(--size-gap);

	& article {
		--flow-space: var(--size-small);
		line-height: var(--line-height-medium);
	}

	& h1 {
		line-height: var(--line-height-medium);
	}

	& #{collections.$anchor} {
		&:not(:hover, :focus, :active) {
			color: inherit;
		}
	}

	& .cover {
		object-fit: cover;
		object-position: center;
		@apply --transition(transform);
	}

	& .cover-anchor {
		display: block;
		overflow: hidden;
	}

	// Two-way interactivity between .cover-anchor / h1 > a
	& .cover-anchor:is(:hover, :focus, :active),
	& article:has(h1 > a:is(:hover, :focus, :active)) {
		& .cover {
			transform: scale(1.1);
		}
	}
	& .cover-anchor:is(:hover, :focus, :active) + h1 > a {
		text-decoration-color: var(--color-maple) !important;
	}

	// Mimic an outline on .cover-anchor when h1 > a is viisbly focussed
	& .cover-anchor:has(+ h1 > a:focus-visible) {
		outline: var(--outline-width, var(--size-border-thin)) solid var(--outline-color, Highlight);
		outline-offset: var(--outline-offset, var(--size-border-thin));
	}
}

.shelf--portrait {
	& .cover {
		block-size: 240px;
	}
}

.shelf--square {
	& :is(.cover-anchor, .cover) {
		aspect-ratio: 1 / 1;
	}

	& .cover {
		block-size: 100%;
	}
}
