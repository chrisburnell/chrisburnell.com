////
/// Deck
/// @group components
////

@use "../abstracts/mixins";

.stack {
	display: grid;
	row-gap: var(--size-medium-large);
	overflow-x: hidden;

	& article {
		display: grid;
		grid-template-columns: [title-start] auto [title-end spacer-start] 1fr [spacer-end pills-start] auto [pills-end time-start] auto [time-end];
		grid-template-rows: [top-start bottom-start] auto [bottom-end top-end];
		align-items: baseline;
		column-gap: var(--size-medium);
		break-inside: avoid;

		@include mixins.cqi(null, null, "small") {
			grid-template-columns: [title-start pills-start] auto [title-end spacer-start] 1fr [spacer-end time-start] auto [time-end pills-end];
			grid-template-rows: [top-start] auto [top-end bottom-start] auto [bottom-end];
		}

		&::after {
			content: " ";
			border-block-end: 1px solid oklch(from currentColor l c h/var(--opacity-gamma));
			align-self: center;
			grid-column: spacer;
			grid-row: top;
		}
	}

	& h1 {
		grid-column: title;
		grid-row: top / bottom;
		position: relative;
		font-size: var(--font-size-delta);
		text-wrap: initial;
	}

	& .pills {
		grid-column: pills;
		grid-row: bottom;
		text-align: end;
	}

	& a:has(time) {
		grid-column: time;
		grid-row: top;
		text-align: end;

		&:not(:hover, :focus, :active) {
			text-decoration-color: transparent;
		}
	}

	& time {
		@include mixins.italic;
		text-align: end;
		white-space: nowrap;
	}

	& :is(a:not(.button), .anchor) {
		&:not(:hover, :focus, :active) {
			color: inherit;
		}
	}
}
