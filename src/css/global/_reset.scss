////
/// Reset
/// @group global
// Inspired by:
// https://github.com/hankchizljaw/modern-css-reset
// https://github.com/mayank99/reset.css/blob/main/package/index.css
////

*,
*::before,
*::after {
	box-sizing: border-box;
	padding: 0;
	margin: 0;
}

@media (prefers-reduced-motion: no-preference) {
	:where(html:focus-within) {
		scroll-behavior: smooth;
	}
}

@supports not (min-block-size: 100dvb) {
	:where(html) {
		block-size: 100%;
	}
}

:where(body) {
	inline-size: 100%;
	min-block-size: 100vb;
	min-block-size: 100dvb;
	-webkit-font-smoothing: antialiased;
}

:where(:focus-visible) {
	outline: var(--outline-width, var(--size-border-thin)) solid var(--outline-color, Highlight);
	outline-offset: var(--outline-offset, var(--size-border-thin));
}

:where(h1, h2, h3, h4, h5, h6) {
	@include hyphenate;
}

:where(img, picture, svg, input[type="image"]) {
	max-inline-size: 100%;
	block-size: auto;
}

:where(svg:not(:root)) {
	overflow: hidden;
}

:where(picture img, picture svg, video, canvas, audio, iframe, embed, object) {
	display: block;
}

:where(input, button, textarea, select) {
	font: inherit;
	color: inherit;
}

:where(textarea) {
	resize: vertical;
	resize: block;
}

:where(button, label, select, summary, [role="button"], [role="option"]) {
	cursor: pointer;
}

:where(hr) {
	border: none;
	border-block-start: 1px solid;
	color: inherit;
	block-size: 0;
	overflow: visible;
}

:where(:disabled) {
	cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
	cursor: not-allowed;
}

:where(:focus-visible, :target) {
	scroll-margin-block: max(8vb, calc(var(--size-header, 0px) + 1rem));
}

:where(.visually-hidden:not(:focus, :focus-within, :active)) {
	@include visually-hidden;
}

@media (prefers-reduced-motion: reduce) {
	@include nullify-animations;
}
@media not (update: fast) {
	@include nullify-animations;
}
