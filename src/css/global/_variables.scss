////
/// Variables
/// @group global
////

@use "sass:map";
@use "sass:math";
@use "../../../node_modules/utopia-core-scss/src/utopia" as utopia;
@use "../abstracts/functions";
@use "../abstracts/mixins";
@use "../generated/tokens";

:root {
	/* Build the Monochrome colors */
	--snowy-lightness: 92%;
	--thunder-lightness: 15%;
	--monochrome-chroma: 0;
	--monochrome-hue: 0;
	@include mixins.setup-monochrome-colors;

	/* Build the Raven colors */
	--raven-lightness: 61.29%;
	--raven-chroma: 0.064;
	--raven-hue: 237.73;
	@include mixins.setup-raven-colors;

	@each $name, $value in map.merge(tokens.$colors-secondary, tokens.$colors-tertiary) {
		#{"--color-" + $name}: #{$value};
	}

	@each $name, $value in tokens.$opacities {
		#{"--opacity-" + $name}: #{$value};
	}

	@each $name, $data in tokens.$sizes {
		#{"--size-" + $name + "-min"}: #{math.div(map.get($data, "minSize"), 16) * 1rem};
		#{"--size-" + $name}: #{utopia.calculateClamp((
			"minWidth": map.get($data, "minWidth"),
			"maxWidth": map.get($data, "maxWidth"),
			"minSize": map.get($data, "minSize"),
			"maxSize": map.get($data, "maxSize"),
		))};
		#{"--size-" + $name + "-max"}: #{math.div(map.get($data, "maxSize"), 16) * 1rem};
	}
	$sizes-seen: ();
	@each $name, $data in tokens.$sizes {
		@each $other-name, $other-data in $sizes-seen {
			#{"--size-" + $other-name + "-" + $name}: #{utopia.calculateClamp((
				"minWidth": map.get($data, "minWidth"),
				"maxWidth": map.get($data, "maxWidth"),
				"minSize": map.get($other-data, "minSize"),
				"maxSize": map.get($data, "maxSize"),
			))};
		}
		$sizes-seen: map.set($sizes-seen, $name, $data);
	}
	@each $name, $value in tokens.$sizes-extra {
		#{"--size-" + $name}: #{$value};
	}
	@each $name, $value in tokens.$breakpoints {
		#{"--size-breakpoint-" + $name}: #{$value};
	}
	// disable sticky header
	// @media (height > #{map.get($breakpoints, "small")}) {
	// 	--size-header: calc(var(--size-logo-small) + var(--size-small) * 2);
	// }

	@each $name, $value in tokens.$font-families {
		#{"--font-family-" + $name}: #{$value};
	}

	@each $name, $data in tokens.$font-sizes {
		#{"--font-size-" + $name + "-min"}: #{math.div(map.get($data, "minSize"), 16) * 1rem};
		#{"--font-size-" + $name}: #{utopia.calculateClamp((
			"minWidth": map.get($data, "minWidth"),
			"maxWidth": map.get($data, "maxWidth"),
			"minSize": map.get($data, "minSize"),
			"maxSize": map.get($data, "maxSize"),
		))};
		#{"--font-size-" + $name + "-max"}: #{math.div(map.get($data, "maxSize"), 16) * 1rem};
	}
	// $font-sizes-seen: ();
	// @each $name, $data in $sizes {
	// 	@each $other-name, $other-data in $font-sizes {
	// 		#{"--size-" + $other-name + "-" + $name}: #{utopia.calculateClamp((
	// 			"minWidth": map.get($data, "minWidth"),
	// 			"maxWidth": map.get($data, "maxWidth"),
	// 			"minSize": map.get($other-data, "minSize"),
	// 			"maxSize": map.get($data, "maxSize"),
	// 		))};
	// 	}
	// 	$font-sizes-seen: map.set($font-sizes-seen, $name, $data);
	// }

	@each $name, $value in tokens.$font-weights {
		#{"--font-weight-" + $name}: #{$value};
	}

	@each $name, $value in tokens.$line-heights {
		#{"--line-height-" + $name}: #{$value};
	}

	@each $name, $value in tokens.$z-indexes {
		#{"--z-index-" + $name}: #{$value};
	}

	--animation-duration: 2s;
	--animation-duration-long: 4s;

	--rotation-default: 5deg;

	--transition-duration: 0.2s;
	--transition-duration-short: 120ms;
	--transition-duration-long: 1s;
	--transition-function: ease;

	--line-clamp: 3;

	--aspect-ratio: 16 / 9;

	--contrast-list: var(--color-yeti), var(--color-snowy), var(--color-mineshaft), var(--color-thunder);
	--contrast-ratio: AA;

	--color-shadow: light-dark(var(--color-shadow-light), var(--color-shadow-dark));
	// Generated with: https://www.joshwcomeau.com/shadow-palette/
	--box-shadow-low: 0.3px 0.5px 0.7px oklch(from var(--color-shadow) l c h / 64%), 0.4px 0.8px 1px -1.2px oklch(from var(--color-shadow) l c h / 64%), 1px 2px 2.5px -2.5px oklch(from var(--color-shadow) l c h / 64%);
	--box-shadow-medium: 0.3px 0.5px 0.7px oklch(from var(--color-shadow) l c h / 64%), 0.8px 1.6px 2px -0.8px oklch(from var(--color-shadow) l c h / 64%), 2.1px 4.1px 5.2px -1.7px oklch(from var(--color-shadow) l c h / 64%), 5px 10px 12.6px -2.5px oklch(from var(--color-shadow) l c h / 64%);
	--box-shadow-high: 0.3px 0.5px 0.7px oklch(from var(--color-shadow) l c h / 64%), 1.5px 2.9px 3.7px -0.4px oklch(from var(--color-shadow) l c h / 64%), 2.7px 5.4px 6.8px -0.7px oklch(from var(--color-shadow) l c h / 64%), 4.5px 8.9px 11.2px -1.1px oklch(from var(--color-shadow) l c h / 64%), 7.1px 14.3px 18px -1.4px oklch(from var(--color-shadow) l c h / 64%), 11.2px 22.3px 28.1px -1.8px oklch(from var(--color-shadow) l c h / 64%), 17px 33.9px 42.7px -2.1px oklch(from var(--color-shadow) l c h / 64%), 25px 50px 62.9px -2.5px oklch(from var(--color-shadow) l c h / 64%);
}
