////
/// Navigation
/// @group blocks
////

@use "sass:map";
@use "../abstracts/functions";
@use "../abstracts/mixins";
@use "../generated/tokens";

.navigation {
	display: flex;
	align-content: start;
	column-gap: var(--size-medium);

	.navigation__list:not(.navigation__list--keep) {
		@media (width <= #{map.get(tokens.$breakpoints, "tiny")}) {
			display: none;
		}
	}
}

.navigation__list {
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-end;
	column-gap: var(--size-tiny-small);
	row-gap: var(--size-medium);
	text-align: center;

	a {
		background-color: transparent !important;
		color: inherit !important;
		display: block;
		padding: var(--size-tiny) var(--size-tiny-small);
		position: relative;
		font-size: var(--font-size-default);
		font-weight: var(--font-weight-bold);
		text-align: center;
		text-decoration: none;
		transition: all var(--transition-duration) var(--transition-function);
		z-index: var(--z-index-root);

		@media not print {
			background-image: linear-gradient(to bottom, light-dark(var(--color-kaiser), var(--color-snowy)), light-dark(var(--color-bowhead), var(--color-highland)));
			background-clip: text;
			-webkit-text-fill-color: transparent;
			box-decoration-break: clone;
		}

		// Solid Colour
		&::before {
			@include mixins.non-interactive;
			content: "";
			background-color: functions.h(raven);
			opacity: 0;
			inline-size: 100%;
			block-size: 0.375em;
			position: absolute;
			inset-block-start: 100%;
			inset-inline-start: 0;
			box-shadow: var(--box-shadow-low);
			transform: scaleY(0);
			transform-origin: top;
			transition: all var(--transition-duration) ease-out;
		}

		&[aria-current="page"],
		&:is(:hover, :focus, :active) {
			&::before {
				opacity: 1;
				transform: none;
			}
		}
	}
}
