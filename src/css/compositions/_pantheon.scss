////
/// Pantheon
/// @group compositions
///
/// --aside-size (clamp(16.00rem, 1.43rem + 27.43vw, 22.00rem))
///     Defines the inline-size of the aside.
/// --columns (6)
///     Defines how many sub-columns should make up the content column.
/// --outdent-gap (var(--size-gap) OR 0)
///     Defines the gap between the content and outdent column.
/// --outdent-size (1fr OR 0)
///     Defines the inline-size of the outdent.
////

.pantheon {
	display: grid;
	align-items: start;
	grid-template-rows:
		[breadcrumbs-start]
		auto
		[breadcrumbs-end context-start]
		auto
		[context-end title-start]
		auto
		[title-end description-start]
		auto
		[description-end sparkline-start]
		auto
		[sparkline-end toc-start]
		auto
		[toc-end content-start]
		auto
		[content-end responses-start]
		auto
		[responses-end meta-start]
		auto
		[meta-end browse-start]
		auto
		[browse-end ads-start]
		auto
		[ads-end];
	grid-template-columns:
		[marginalia-start content-start outdent-start]
		auto
		[outdent-end content-end marginalia-end];
	transition: all var(--transition-duration) var(--transition-function);

	@include container("above:medium") {
		grid-template-rows:
			[breadcrumbs-start]
			auto
			[breadcrumbs-end title-start]
			auto
			[title-end context-start description-start]
			auto
			[context-end description-end sparkline-start content-start]
			auto
			[sparkline-end meta-start]
			1fr
			[content-end responses-start]
			auto
			[responses-end browse-start]
			auto
			[browse-end ads-start]
			auto
			[meta-end ads-end];
		grid-template-columns:
			[marginalia-start]
			var(--aside-size, clamp(15rem, 7.71rem + 13.71vw, 18rem)) // 15–18rem between 850px–1200px
			[marginalia-end]
			var(--size-gap)
			[content-start]
			repeat(var(--columns, 6), 1fr)
			[content-end]
			var(--outdent-gap, 0)
			[outdent-start]
			var(--outdent-size, 0)
			[outdent-end];
	}

	&:not(.wide) {
		@include container("above:gigantic") {
			--outdent-gap: var(--size-gap);
			--outdent-size: 1fr;
		}
	}

	@include media("print") {
		display: block;
	}

	& > %content {
		max-inline-size: var(--size-line-length);
	}
}

.breadcrumbs,
.title,
.description {
	grid-column: marginalia / outdent;
}

.breadcrumbs {
	grid-row: breadcrumbs;
}

.title {
	grid-row: title;
}

.description {
	grid-row: description;
}
.description--published {
	grid-row: context;
}

.content {
	grid-column: content;
	grid-row: content;

	&.full,
	&.wide {
		grid-column: content / outdent;
	}
}

.pantheon > spark-line,
.pantheon > .spark-line {
	grid-column: marginalia;
	grid-row: sparkline;
	margin-block-end: var(--size-large);

	@include container("below:medium") {
		justify-self: start;
	}

	@include container("above:medium") {
		justify-self: center;
	}
}

.meta {
	grid-column: marginalia;
	grid-row: meta;

	&:has(.table-of-contents) {
		@include container("below:medium") {
			grid-row: toc;
			margin-block-start: 0;
			margin-block-end: var(--size-gigantic);
		}
	}
}

.responses,
.browse,
.ads {
	grid-column: content;
}

.responses {
	grid-row: responses;
}

.browse {
	grid-row: browse;
}

.ads {
	grid-column: content;
	grid-row: ads;
}
