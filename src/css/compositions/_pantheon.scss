////
/// Pantheon
/// @group compositions
///
/// --aside-size (clamp(15rem, 7.71rem + 13.71vi, 18rem))
///     Defines the inline-size of the aside.
/// --margin-gap (var(--size-gap) OR 0)
///     Defines the gap between the marginalia and content column.
/// --columns (6)
///     Defines how many sub-columns should make up the content column.
/// --outdent-gap (var(--size-gap) OR 0)
///     Defines the gap between the content and outdent column.
/// --outdent-size (1fr OR 0)
///     Defines the inline-size of the outdent.
////

.pantheon {
	display: grid;
	align-items: start;
	grid-template-rows:
		[breadcrumbs-start]
		auto
		[breadcrumbs-end context-start]
		auto
		[context-end title-start]
		auto
		[title-end description-start]
		auto
		[description-end sparkline-start]
		auto
		[sparkline-end toc-start]
		auto
		[toc-end content-start]
		auto
		[content-end meta-start]
		auto
		[meta-end];
	grid-template-columns:
		[marginalia-start content-start outdent-start]
		auto
		[outdent-end content-end marginalia-end];
	transition: all var(--transition-duration) var(--transition-function);

	&:not(.full) {
		--aside-size: var(--size-aside); // 15–18rem between 850px–1200px
		--margin-gap: var(--size-gap);

		@include cq(null, "medium") {
			grid-template-rows:
				[breadcrumbs-start]
				auto
				[breadcrumbs-end title-start]
				auto
				[title-end context-start description-start]
				auto
				[context-end description-end sparkline-start content-start]
				auto
				[sparkline-end meta-start]
				1fr
				[content-end meta-end];
			grid-template-columns:
				[marginalia-start]
				var(--aside-size, 0)
				[marginalia-end]
				var(--margin-gap, 0)
				[content-start]
				repeat(var(--columns, 6), 1fr)
				[content-end]
				var(--outdent-gap, 0)
				[outdent-start]
				var(--outdent-size, 0)
				[outdent-end];
		}
	}

	&:not(:is(.full, .wide)) {
		@include cq(null, "gigantic") {
			// only show outdent above gigantic on non-wide/non-full pages
			--outdent-gap: var(--size-gap);
			--outdent-size: 1fr;
		}
	}

	@media print {
		display: block;
	}

	& > %content {
		max-inline-size: var(--size-line-length);
	}
}

.breadcrumbs,
.title,
.description {
	grid-column: marginalia / outdent;
}

.breadcrumbs {
	grid-row: breadcrumbs;
}

.title {
	grid-row: title;
}

.description {
	grid-row: description;
}
.description--published {
	grid-row: context;
}

.content {
	grid-column: content;
	grid-row: content;
}

.pantheon > :is(spark-line, .spark-line, svg-sparkline) {
	opacity: 0;
	grid-column: marginalia;
	grid-row: sparkline;
	margin-block-end: var(--size-large);

	@include cq(null, null, "small") {
		justify-self: start;
	}

	@include cq(null, "small") {
		justify-self: center;
	}
}

.meta {
	grid-column: marginalia;
	grid-row: meta;

	&:has(.table-of-contents) {
		@include cq(null, null, "medium") {
			grid-row: toc;
			margin-block-start: 0;
			margin-block-end: var(--size-gigantic);
		}
	}
}

.responses,
.browse {
	grid-column: content;
}

.responses {
	grid-row: responses;
}

.browse {
	grid-row: browse;
}
